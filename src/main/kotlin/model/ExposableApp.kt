package model

import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import util.convertKebabCaseToTitleCase
import java.util.*

class ExposableApp(
    val id: UUID = UUID.randomUUID(),
    protocol: String = "",
    localAddress: String = "",
    localPort: Int? = null,
    subdomain: String = "",
    name: String = "",
    isCustomName: Boolean = false
) {
    var protocol by mutableStateOf(protocol)
    var localAddress by mutableStateOf(localAddress)
    var localPort by mutableStateOf(localPort)
    var subdomain by mutableStateOf(subdomain)
    var name by mutableStateOf(name)
    var isCustomName by mutableStateOf(isCustomName)

    fun hasDefaultAddress(): Boolean =
        localAddress.isBlank() || localAddress == "127.0.0.1"

    fun formatShortLocalSocket(): String? {
        val port = localPort ?: return null

        return if (hasDefaultAddress()) {
            port.toString()
        } else {
            "${localAddress}:${port}"
        }
    }

    fun getFullDomain(hostname: String): String? =
        if (subdomain.isBlank())
            null
        else
            "${subdomain}.$hostname"

    fun getFullUrl(hostname: String, schema: String): String? =
        getFullDomain(hostname)?.let { fullDomain ->
            "$schema://$fullDomain"
        }

    fun getAutogeneratedName(): String {
        return convertKebabCaseToTitleCase(subdomain)
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as ExposableApp

        return id == other.id
    }

    override fun hashCode(): Int {
        return id.hashCode()
    }
}
